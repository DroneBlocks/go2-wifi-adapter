name: Generate PDF Documentation
on:
  push:
    paths:
      - 'README.md'
    branches:
      - main

# Add permissions block
permissions:
  contents: write

jobs:
  convert_to_pdf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install md-to-pdf
        run: npm install -g md-to-pdf

      - name: Create style file
        run: |
          echo "Creating style.css in $(pwd)"
          cat > style.css << 'EOL'
          body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            line-height: 1.6;
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
          }

          pre {
            background-color: #f6f8fa;
            border-radius: 3px;
            padding: 16px;
            overflow-x: auto;
          }

          code {
            font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace;
          }

          h1, h2, h3 {
            color: #2c3e50;
            border-bottom: 1px solid #eaecef;
            padding-bottom: 0.3em;
          }

          table {
            border-collapse: collapse;
            width: 100%;
            margin: 1em 0;
          }

          th, td {
            border: 1px solid #dfe2e5;
            padding: 6px 13px;
          }

          img {
            max-width: 100%;
          }
          EOL
          echo "Created style.css"

      - name: Convert README to PDF
        run: |
          echo "Current directory: $(pwd)"
          echo "Files before conversion:"
          ls -la
          md-to-pdf README.md --stylesheet style.css
          echo "Files after conversion:"
          ls -la
          echo "PDF file details:"
          ls -l README.pdf

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: README.pdf

      - name: Update Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating/updating release with PDF..."
          # Delete previous release if it exists
          gh release delete latest --cleanup-tag || true || echo "No existing release to delete"
          
          # Create new release
          gh release create latest README.pdf \
            --title "Latest Documentation" \
            --notes "Automatically generated documentation from README.md" \
            --prerelease
          echo "Release updated"